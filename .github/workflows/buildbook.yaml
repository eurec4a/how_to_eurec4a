name: buildbook

on:
  push:
    branches:
      - master
      - main
  pull_request:
  workflow_dispatch:

env:
  # Increase this value to reset cache
  CONDA_CACHE_NUMBER: 0
  PYDEVD_DISABLE_FILE_VALIDATION: 1  # disable warnings that debugger might not work using frozen (i.e. faster-to-load) modules. We'd expect debugging to be done outside of CI, so here it's probably fine to hide it.

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ipfs-version: [0.27.0]
    defaults:
      run:
        shell: bash -l {0}
    env:
      IPFSSPEC_GATEWAYS: "http://127.0.0.1:8080"

    steps:
    - uses: actions/checkout@v4
    - name: initialize conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: how_to_eurec4a
        miniforge-version: latest
        conda-remove-defaults: true
        environment-file: environment.yml
    - name: Install local ipfs node
      run: |
        sudo apt-get update
        sudo apt-get install -y wget curl jq
        bash <(curl https://raw.githubusercontent.com/eurec4a/ipfs_tools/main/install_and_run_ipfs.sh) ${{ matrix.ipfs-version }}
    - name: setting up notebook execution cache
      uses: actions/cache/restore@v4
      with:
        path: |
          how_to_eurec4a/_build/.jupyter_cache
        key: notebooks-${{ runner.os }}-${{ hashFiles('environment.yml', 'requirements.txt') }}-${{ github.run_id }}-${{ github.run_attempt }}
        restore-keys: |
          notebooks-${{ runner.os }}-${{ hashFiles('environment.yml', 'requirements.txt') }}-${{ github.run_id }}-
          notebooks-${{ runner.os }}-${{ hashFiles('environment.yml', 'requirements.txt') }}-
    - name: build book
      run: |
        conda info
        jupyter-book build -W -n --keep-going  how_to_eurec4a
    - name: save execution cache
      uses: actions/cache/save@v4
      if: always()
      with:
        path: |
          how_to_eurec4a/_build/.jupyter_cache
        key: notebooks-${{ runner.os }}-${{ hashFiles('environment.yml', 'requirements.txt') }}-${{ github.run_id }}-${{ github.run_attempt }}
    - name: Archive build artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: html
        path: |
          how_to_eurec4a/_build/html

  publish:
    needs: build
    if: "always() && github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository_owner == 'eurec4a'"
    runs-on: ubuntu-latest
    steps:
      - name: Download compiled book
        uses: actions/download-artifact@v4
        with:
          name: html
          path: html
      - name: Publish book on github pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: html
          cname: howto.eurec4a.eu
