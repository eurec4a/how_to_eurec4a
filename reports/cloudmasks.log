Traceback (most recent call last):
  File "/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
ds_bt = xr.open_zarr("ipfs://QmQEwkhhHdJkiThf4hnj9G3wgqVreBnWGrX2A5kT6CrtY7",
                     consolidated=True,
                    ).assign_coords(va=lambda x: x.va)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFSPathExistNotDir[0m                         Traceback (most recent call last)
[0;32m/tmp/ipykernel_5997/3080218225.py[0m in [0;36m<module>[0;34m[0m
[0;32m----> 1[0;31m ds_bt = xr.open_zarr("ipfs://QmQEwkhhHdJkiThf4hnj9G3wgqVreBnWGrX2A5kT6CrtY7",
[0m[1;32m      2[0m                      [0mconsolidated[0m[0;34m=[0m[0;32mTrue[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m      3[0m                     ).assign_coords(va=lambda x: x.va)

[0;32m/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/xarray/backends/zarr.py[0m in [0;36mopen_zarr[0;34m(store, group, synchronizer, chunks, decode_cf, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, consolidated, overwrite_encoded_chunks, chunk_store, storage_options, decode_timedelta, use_cftime, **kwargs)[0m
[1;32m    750[0m     }
[1;32m    751[0m [0;34m[0m[0m
[0;32m--> 752[0;31m     ds = open_dataset(
[0m[1;32m    753[0m         [0mfilename_or_obj[0m[0;34m=[0m[0mstore[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    754[0m         [0mgroup[0m[0;34m=[0m[0mgroup[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/xarray/backends/api.py[0m in [0;36mopen_dataset[0;34m(filename_or_obj, engine, chunks, cache, decode_cf, mask_and_scale, decode_times, decode_timedelta, use_cftime, concat_characters, decode_coords, drop_variables, backend_kwargs, *args, **kwargs)[0m
[1;32m    493[0m [0;34m[0m[0m
[1;32m    494[0m     [0moverwrite_encoded_chunks[0m [0;34m=[0m [0mkwargs[0m[0;34m.[0m[0mpop[0m[0;34m([0m[0;34m"overwrite_encoded_chunks"[0m[0;34m,[0m [0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 495[0;31m     backend_ds = backend.open_dataset(
[0m[1;32m    496[0m         [0mfilename_or_obj[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    497[0m         [0mdrop_variables[0m[0;34m=[0m[0mdrop_variables[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/xarray/backends/zarr.py[0m in [0;36mopen_dataset[0;34m(self, filename_or_obj, mask_and_scale, decode_times, concat_characters, decode_coords, drop_variables, use_cftime, decode_timedelta, group, mode, synchronizer, consolidated, chunk_store, storage_options, stacklevel)[0m
[1;32m    798[0m [0;34m[0m[0m
[1;32m    799[0m         [0mfilename_or_obj[0m [0;34m=[0m [0m_normalize_path[0m[0;34m([0m[0mfilename_or_obj[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 800[0;31m         store = ZarrStore.open_group(
[0m[1;32m    801[0m             [0mfilename_or_obj[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    802[0m             [0mgroup[0m[0;34m=[0m[0mgroup[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/xarray/backends/zarr.py[0m in [0;36mopen_group[0;34m(cls, store, mode, synchronizer, group, consolidated, consolidate_on_close, chunk_store, storage_options, append_dim, write_region, safe_chunks, stacklevel)[0m
[1;32m    366[0m         [0;32melif[0m [0mconsolidated[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    367[0m             [0;31m# TODO: an option to pass the metadata_key keyword[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 368[0;31m             [0mzarr_group[0m [0;34m=[0m [0mzarr[0m[0;34m.[0m[0mopen_consolidated[0m[0;34m([0m[0mstore[0m[0;34m,[0m [0;34m**[0m[0mopen_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    369[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    370[0m             [0mzarr_group[0m [0;34m=[0m [0mzarr[0m[0;34m.[0m[0mopen_group[0m[0;34m([0m[0mstore[0m[0;34m,[0m [0;34m**[0m[0mopen_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/zarr/convenience.py[0m in [0;36mopen_consolidated[0;34m(store, metadata_key, mode, **kwargs)[0m
[1;32m   1179[0m [0;34m[0m[0m
[1;32m   1180[0m     [0;31m# normalize parameters[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1181[0;31m     [0mstore[0m [0;34m=[0m [0mnormalize_store_arg[0m[0;34m([0m[0mstore[0m[0;34m,[0m [0mstorage_options[0m[0;34m=[0m[0mkwargs[0m[0;34m.[0m[0mget[0m[0;34m([0m[0;34m"storage_options"[0m[0;34m)[0m[0;34m,[0m [0mmode[0m[0;34m=[0m[0mmode[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1182[0m     [0;32mif[0m [0mmode[0m [0;32mnot[0m [0;32min[0m [0;34m{[0m[0;34m'r'[0m[0;34m,[0m [0;34m'r+'[0m[0;34m}[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1183[0m         raise ValueError("invalid mode, expected either 'r' or 'r+'; found {!r}"

[0;32m/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/zarr/storage.py[0m in [0;36mnormalize_store_arg[0;34m(store, storage_options, mode)[0m
[1;32m    112[0m     [0;32mif[0m [0misinstance[0m[0;34m([0m[0mstore[0m[0;34m,[0m [0mstr[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    113[0m         [0;32mif[0m [0;34m"://"[0m [0;32min[0m [0mstore[0m [0;32mor[0m [0;34m"::"[0m [0;32min[0m [0mstore[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 114[0;31m             [0;32mreturn[0m [0mFSStore[0m[0;34m([0m[0mstore[0m[0;34m,[0m [0mmode[0m[0;34m=[0m[0mmode[0m[0;34m,[0m [0;34m**[0m[0;34m([0m[0mstorage_options[0m [0;32mor[0m [0;34m{[0m[0;34m}[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    115[0m         [0;32melif[0m [0mstorage_options[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    116[0m             [0;32mraise[0m [0mValueError[0m[0;34m([0m[0;34m"storage_options passed with non-fsspec path"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda/envs/how_to_eurec4a/lib/python3.8/site-packages/zarr/storage.py[0m in [0;36m__init__[0;34m(self, url, normalize_keys, key_separator, mode, exceptions, dimension_separator, **storage_options)[0m
[1;32m   1139[0m         [0mself[0m[0;34m.[0m[0m_dimension_separator[0m [0;34m=[0m [0mdimension_separator[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1140[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0mfs[0m[0;34m.[0m[0mexists[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mpath[0m[0;34m)[0m [0;32mand[0m [0;32mnot[0m [0mself[0m[0;34m.[0m[0mfs[0m[0;34m.[0m[0misdir[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mpath[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1141[0;31m             [0;32mraise[0m [0mFSPathExistNotDir[0m[0;34m([0m[0murl[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1142[0m [0;34m[0m[0m
[1;32m   1143[0m     [0;32mdef[0m [0m_normalize_key[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mkey[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;31mFSPathExistNotDir[0m: path exists but is not a directory: %r
FSPathExistNotDir: path exists but is not a directory: %r

